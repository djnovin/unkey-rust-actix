name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Format
        run: cargo fmt --all -- --check

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Run Tests
        run: cargo test --all -- --test-threads=1 | tee junit.xml

      - name: Install gcovr
        run: sudo apt-get install gcovr

      - name: Convert LCOV to SonarQube XML
        run: gcovr --sonarqube --output target/coverage-sonar.xml --root . --exclude-directories tests

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  audit:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run cargo-audit
        run: cargo audit

  tarpaulin:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run Coverage (LCOV)
        run: cargo tarpaulin --out Lcov --engine=llvm --output-dir target

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./target/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [lint, tarpaulin, test]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=djnovin_unkey-rust-actix
            -Dsonar.organization=djnovin
            -Dsonar.coverageReportPaths=./target/coverage-sonar.xml
            -Dsonar.testExecutionReportPaths=./junit.xml

  benchmarks:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Run Benchmarks
        run: cargo bench
